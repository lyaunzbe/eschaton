{"version":3,"sources":["components/Scene/img11.jpg","components/PasswordOverlay/style.module.scss","components/LandingPage/style.module.scss","components/EndingPage/style.module.scss","components/Scene/disp1.jpg","components/Scene/img12.jpg","shaders/CoverShader.js","postprocessing/CoverTexturePass.js","shaders/NoisyCircleShader.js","postprocessing/NoisyCirclePass.js","shaders/AlphaMaskShader.js","components/Box.js","components/Scene/index.js","components/PasswordOverlay/index.js","components/LandingPage/index.js","components/EndingPage/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","CoverShader","uniforms","u_texture","value","u_resolution","type","u_tResolution","vertexShader","fragmentShader","CoverTexturePass","map","resolution","shader","UniformsUtils","clone","material","ShaderMaterial","depthTest","depthWrite","needsSwap","fsQuad","Pass","FullScreenQuad","renderer","writeBuffer","readBuffer","oldAutoClear","autoClear","this","image","width","height","setRenderTarget","renderToScreen","clear","render","NoisyCircleShader","u_timeElapsed","u_mousePosition","NoisyCirclePass","mousePosition","timeElapsed","AlphaMaskShader","tDiffuse","tMask","Box","extend","EffectComposer","TexturePass","ShaderPass","TextureGenerator","renderTarget","size","useThree","useMemo","scene","useRef","camera","shaderMaterialArgs","side","THREE","useState","setMousePosition","setTimeElapsed","useFrame","gl","clock","mouse","x","y","getElapsedTime","current","ref","args","attach","uniforms-u_resolution-value","uniforms-u_timeElapsed-value","uniforms-u_mousePosition-value","Effects","url","maskRenderTarget","parameters","minFilter","magFilter","format","stencilBuffer","pixelRatio","getPixelRatio","composer","useEffect","setSize","state","texture","useLoader","image1","attachArray","uniforms-tMask-value","Scene","props","fallback","cx","classNames","bind","style","Eye","className","xmlns","viewBox","d","fill","CODE","PasswordOverlay","submitCode","setSubmitCode","toAscii","input","result","arr","match","i","length","String","fromCharCode","parseInt","toString","onChange","event","target","onClick","console","log","toLowerCase","parentUpdate","LandingPage","counter","setCounter","timerString","setTimerString","setTimeout","Date","toISOString","substr","onEnded","controls","src","EndingPage","showVideo","setShowVideo","showCredits","setShowCredits","autoPlay","App","showPasswordOverlay","setShowPasswordOverlay","showLandingPage","setShowLandingPage","path","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ee47c87d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/img11.79513244.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"password-overlay\":\"style_password-overlay__2vBaq\",\"password-overlay__content\":\"style_password-overlay__content__5hRNU\",\"content__label\":\"style_content__label__1jdAU\",\"content__input\":\"style_content__input__Ey67Y\",\"content__eyewrap\":\"style_content__eyewrap__1Q2Zp\",\"eye\":\"style_eye__2dmOO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"landing-page\":\"style_landing-page__12oBI\",\"landing-page__content\":\"style_landing-page__content__22-f8\",\"content__timer\":\"style_content__timer__PTW-u\",\"blink\":\"style_blink__35T2y\",\"blinker\":\"style_blinker__3-d_x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ending-page\":\"style_ending-page__14llD\",\"ending-page__content\":\"style_ending-page__content__3ARdu\",\"content__credits\":\"style_content__credits__Yln0w\"};","module.exports = __webpack_public_path__ + \"static/media/disp1.7942922a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img12.f40d7b8e.jpg\";","var CoverShader = {\n  uniforms: {\n    u_texture: { value: null },\n    u_resolution: { type: 'v2', value: null },\n    u_tResolution: { type: 'v2', value: null }\n  },\n\n  vertexShader: `\n    varying vec2 vUv;\n    void main() {\n\n      vUv = uv;\n      gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n    }\n  `,\n\n  fragmentShader: `\n    uniform vec2 u_resolution;\n    uniform vec2 u_tResolution;\n    uniform sampler2D u_texture;\n    \n    varying vec2 vUv;\n\n    void main() {\n      vec2 ratio = vec2(\n        min((u_resolution.x / u_resolution.y) / (u_tResolution.x / u_tResolution.y), 1.0),\n        min((u_resolution.y / u_resolution.x) / (u_tResolution.y / u_tResolution.x), 1.0)\n      );\n    \n      vec2 uv = vec2(\n        vUv.x * ratio.x + (1.0 - ratio.x) * 0.5,\n        vUv.y * ratio.y + (1.0 - ratio.y) * 0.5\n      );\n\n      vec4 image = texture2D(u_texture, uv);\n\n      gl_FragColor = image;\n    }\n  `\n}\n\nexport { CoverShader }\n","import {\n  ShaderMaterial,\n  UniformsUtils\n} from 'three'\nimport { Pass } from 'three/examples/jsm/postprocessing/Pass.js'\nimport { CoverShader } from '../shaders/CoverShader.js'\n\nclass CoverTexturePass extends Pass {\n  constructor (map, resolution) {\n    super()\n\n    const shader = CoverShader\n\n    this.map = map\n    this.resolution = resolution\n\n    this.uniforms = UniformsUtils.clone(shader.uniforms)\n\n    this.material = new ShaderMaterial({\n      uniforms: this.uniforms,\n      vertexShader: shader.vertexShader,\n      fragmentShader: shader.fragmentShader,\n      depthTest: false,\n      depthWrite: false\n    })\n\n    this.needsSwap = false\n\n    this.fsQuad = new Pass.FullScreenQuad(null)\n  }\n\n  render (renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */) {\n    const oldAutoClear = renderer.autoClear\n    renderer.autoClear = false\n\n    this.fsQuad.material = this.material\n\n    this.uniforms.u_resolution.value = this.resolution\n    this.uniforms.u_texture.value = this.map\n    this.uniforms.u_tResolution.value = [this.map.image.width, this.map.image.height]\n\n    renderer.setRenderTarget(this.renderToScreen ? null : readBuffer)\n\n    if (this.clear) renderer.clear()\n    this.fsQuad.render(renderer)\n\n    renderer.autoClear = oldAutoClear\n  }\n}\n\nexport { CoverTexturePass }\n","var NoisyCircleShader = {\n  uniforms: {\n    u_timeElapsed: { type: 'f', value: 0 },\n    u_mousePosition: { type: 'v2', value: null },\n    u_resolution: { type: 'v2', value: null }\n  },\n\n  vertexShader: `\n    varying vec2 vUv;\n    void main() {\n\n      vUv = uv;\n      gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n    }\n  `,\n\n  fragmentShader: `\n    uniform float u_timeElapsed;\n    uniform vec2 u_mousePosition;\n    uniform vec2 u_resolution;\n    varying vec2 vUv;\n\n    vec3 random3(vec3 c) {\n      float j = 4096.0*sin(dot(c,vec3(17.0, 59.4, 15.0)));\n      vec3 r;\n      r.z = fract(512.0*j);\n      j *= .125;\n      r.x = fract(512.0*j);\n      j *= .125;\n      r.y = fract(512.0*j);\n      return r-0.5;\n    }\n\n    const float F3 =  0.3333333;\n    const float G3 =  0.1666667;\n    float snoise(vec3 p) {\n    \n      vec3 s = floor(p + dot(p, vec3(F3)));\n      vec3 x = p - s + dot(s, vec3(G3));\n  \n      vec3 e = step(vec3(0.0), x - x.yzx);\n      vec3 i1 = e*(1.0 - e.zxy);\n      vec3 i2 = 1.0 - e.zxy*(1.0 - e);\n  \n      vec3 x1 = x - i1 + G3;\n      vec3 x2 = x - i2 + 2.0*G3;\n      vec3 x3 = x - 1.0 + 3.0*G3;\n  \n      vec4 w, d;\n  \n      w.x = dot(x, x);\n      w.y = dot(x1, x1);\n      w.z = dot(x2, x2);\n      w.w = dot(x3, x3);\n  \n      w = max(0.6 - w, 0.0);\n  \n      d.x = dot(random3(s), x);\n      d.y = dot(random3(s + i1), x1);\n      d.z = dot(random3(s + i2), x2);\n      d.w = dot(random3(s + 1.0), x3);\n  \n      w *= w;\n      w *= w;\n      d *= w;\n  \n      return dot(d, vec4(52.0));\n    }\n\n    float circle(in vec2 st, in vec2 center, float radius){\n      vec2 dist = st - center;\n      dist.x = dist.x * (u_resolution.x / u_resolution.y);\n\n      return smoothstep(radius, radius + 0.0001, length(dist));\n    }\n  \n    void main() {\n      vec2 st = gl_FragCoord.xy/u_resolution;\n\n      float f = 0.;\n      float t = u_timeElapsed * 0.5;\n      vec2 uv = st;\n      uv *= 5.0;\n      mat2 m = mat2( 1.6,  1.2, -1.2,  1.6 );\n      f  = 0.5000*snoise( vec3(uv, t) ); uv = m*uv;\n      f += 0.2500*snoise( vec3(uv, t) ); uv = m*uv;\n      f += 0.1250*snoise( vec3(uv, t) ); uv = m*uv;\n      f += 0.0625*snoise( vec3(uv, t) ); uv = m*uv;\n\n      vec2 displaced = st + vec2(f * 0.3);  \n      vec2 mousePos = (u_mousePosition + 1.) / 2.;\n      float radius = 0.2;\n      vec3 color = vec3(circle(displaced, mousePos, radius));\n\n      gl_FragColor = vec4(color, 1.);\n    }\n  `\n}\n\nexport { NoisyCircleShader }\n","import {\n  ShaderMaterial,\n  UniformsUtils\n} from 'three'\nimport { Pass } from 'three/examples/jsm/postprocessing/Pass.js'\nimport { NoisyCircleShader } from '../shaders/NoisyCircleShader.js'\n\nclass NoisyCirclePass extends Pass {\n  constructor (mousePosition, timeElapsed, resolution) {\n    super()\n\n    const shader = NoisyCircleShader\n\n    this.mousePosition = mousePosition\n    this.timeElapsed = timeElapsed\n    this.resolution = resolution\n\n    this.uniforms = UniformsUtils.clone(shader.uniforms)\n\n    this.material = new ShaderMaterial({\n      uniforms: this.uniforms,\n      vertexShader: shader.vertexShader,\n      fragmentShader: shader.fragmentShader,\n      depthTest: false,\n      depthWrite: false\n    })\n\n    this.needsSwap = false\n\n    this.fsQuad = new Pass.FullScreenQuad(null)\n  }\n\n  render (renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */) {\n    const oldAutoClear = renderer.autoClear\n    renderer.autoClear = false\n\n    this.fsQuad.material = this.material\n\n    this.uniforms.u_resolution.value = this.resolution\n    this.uniforms.u_timeElapsed.value = this.timeElapsed\n    this.uniforms.u_mousePosition.value = this.mousePosition\n\n    renderer.setRenderTarget(this.renderToScreen ? null : readBuffer)\n\n    if (this.clear) renderer.clear()\n    this.fsQuad.render(renderer)\n\n    renderer.autoClear = oldAutoClear\n  }\n}\n\nexport { NoisyCirclePass }\n","var AlphaMaskShader = {\n  uniforms: {\n    tDiffuse: { value: null },\n    tMask: { value: null }\n  },\n\n  vertexShader: `\n    varying vec2 vUv;\n    void main() {\n\n      vUv = uv;\n      gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n    }\n  `,\n\n  fragmentShader: `\n    uniform sampler2D tDiffuse;\n    uniform sampler2D tMask;\n    varying vec2 vUv;\n    \n    void main() {\n      // get the current pixel color\n      vec4 texel = texture2D(tDiffuse, vUv);\n      // get alpha based on the color of the mask image\n      float alpha = texture2D(tMask, vUv).r;\n      // apply the alpha to the current pixel\n      gl_FragColor = texel * alpha;\n    }\n  `\n}\n\nexport { AlphaMaskShader }\n","import React, { useState, useRef } from 'react'\nimport { useFrame } from 'react-three-fiber'\n\nfunction Box (props) {\n  // This reference will give us direct access to the mesh\n  const mesh = useRef()\n\n  // Set up state for the hovered and active state\n  const [hovered, setHover] = useState(false)\n  const [active, setActive] = useState(false)\n\n  // Rotate mesh every frame, this is outside of React without overhead\n  useFrame(() => (mesh.current.rotation.x = mesh.current.rotation.y += 0.01))\n\n  return (\n    <mesh\n      {...props}\n      ref={mesh}\n      scale={active ? [1.5, 1.5, 1.5] : [1, 1, 1]}\n      onClick={e => setActive(!active)}\n      onPointerOver={e => setHover(true)}\n      onPointerOut={e => setHover(false)}\n    >\n      <boxBufferGeometry attach='geometry' args={[1, 1, 1]} />\n      <meshStandardMaterial attach='material' color={hovered ? 'hotpink' : 'orange'} />\n    </mesh>\n  )\n}\n\nexport default Box\n","import React, { Suspense, useState, useRef, useMemo, useEffect } from 'react'\nimport PropTypes from 'prop-types'\n\nimport * as THREE from 'three'\nimport { useThree, useLoader, useFrame, extend } from 'react-three-fiber'\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer'\nimport { TexturePass } from 'three/examples/jsm/postprocessing/TexturePass'\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass'\n\nimport { CoverTexturePass } from '../../postprocessing/CoverTexturePass'\nimport { NoisyCirclePass } from '../../postprocessing/NoisyCirclePass'\nimport { NoisyCircleShader } from '../../shaders/NoisyCircleShader'\nimport { AlphaMaskShader } from '../../shaders/AlphaMaskShader'\n\nimport Box from '../Box'\n\nimport disp from './disp1.jpg'\nimport image1 from './img11.jpg'\nimport image2 from './img12.jpg'\n\nextend({\n  EffectComposer,\n  CoverTexturePass,\n  NoisyCirclePass,\n  TexturePass,\n  ShaderPass\n})\n\n// Render a scene with its own camera, and a plane that fills the entire camera\nconst TextureGenerator = ({ renderTarget, fragmentShader }) => {\n  const { size } = useThree()\n  const resolution = useMemo(() => [size.width, size.height], [size.height, size.width])\n\n  const scene = useRef()\n  const camera = useRef()\n\n  const shaderMaterialArgs = {\n    side: THREE.DoubleSide,\n    uniforms: {\n      u_timeElapsed: { type: 'f', value: 0.0 },\n      u_mousePosition: { type: 'v2', value: [0, 0] },\n      u_resolution: { type: 'v2', value: [0, 0] }\n    },\n    vertexShader: 'varying vec2 vUv;void main() {vUv = uv;gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );}',\n    fragmentShader: fragmentShader\n  }\n\n  // const resolution = useMemo(() => [size.width, size.height], [size.height, size.width])\n  const [mousePosition, setMousePosition] = useState([0, 0])\n  const [timeElapsed, setTimeElapsed] = useState(0)\n  useFrame(({ gl, clock, mouse }) => {\n    setMousePosition([mouse.x, mouse.y])\n    setTimeElapsed(clock.getElapsedTime())\n    gl.setRenderTarget(renderTarget)\n    gl.render(scene.current, camera.current)\n    gl.setRenderTarget(null)\n  })\n\n  return (\n    <scene ref={scene}>\n      <orthographicCamera ref={camera} args={[-1, 1, 1, -1, 0, 1]} />\n      <mesh>\n        <planeBufferGeometry attach='geometry' args={[4, 4]} />\n        <shaderMaterial attach='material' args={[shaderMaterialArgs]} uniforms-u_resolution-value={resolution} uniforms-u_timeElapsed-value={timeElapsed} uniforms-u_mousePosition-value={mousePosition}  />\n      </mesh>\n    </scene>\n  )\n}\n\nTextureGenerator.propTypes = {\n  renderTarget: PropTypes.object,\n  fragmentShader: PropTypes.string\n}\n\n// EFFECTS\nconst Effects = ({ url }) => {\n  const { gl, camera, size } = useThree()\n\n  const resolution = useMemo(() => [size.width, size.height], [size.height, size.width])\n\n  const maskRenderTarget = useMemo(() => {\n    const parameters = {\n      minFilter: THREE.LinearFilter,\n      magFilter: THREE.LinearFilter,\n      format: THREE.RGBAFormat,\n      stencilBuffer: false\n    }\n\n    const pixelRatio = gl.getPixelRatio()\n    const width = size.width\n    const height = size.height\n\n    return new THREE.WebGLRenderTarget(width * pixelRatio, height * pixelRatio, parameters)\n  }, [])\n  const composer = useRef()\n\n  useEffect(() => {\n    maskRenderTarget.setSize(size.width, size.height)\n    composer.current.setSize(size.width, size.height)\n  }, [size.width, size.height])\n\n  const [mousePosition, setMousePosition] = useState([0, 0])\n  const [timeElapsed, setTimeElapsed] = useState(0)\n  useFrame((state) => {\n    setMousePosition([state.mouse.x, state.mouse.y])\n    setTimeElapsed(state.clock.getElapsedTime())\n    gl.autoClear = false\n    gl.clear()\n    composer.current.render()\n  })\n\n  const texture = useLoader(THREE.TextureLoader, image1)\n\n  return (\n    <>\n      <TextureGenerator renderTarget={maskRenderTarget} fragmentShader={NoisyCircleShader.fragmentShader} />\n      <effectComposer ref={composer} args={[gl]}>\n        <coverTexturePass attachArray='passes' args={[texture, resolution]} />\n        <shaderPass attachArray='passes' args={[AlphaMaskShader]} uniforms-tMask-value={maskRenderTarget.texture} />\n      </effectComposer>\n    </>\n  )\n}\n\nconst Scene = (props) => {\n  return (\n    <Suspense fallback='Loading...'>\n      <Effects />\n    </Suspense>\n  )\n}\n\nexport default Scene\n","import React, { useState, useEffect } from 'react'\n\nimport style from './style.module.scss'\nimport classNames from 'classnames/bind'\n\nconst cx = classNames.bind(style)\n\nconst Eye = (props) => (\n  <svg className={cx('eye')} xmlns='http://www.w3.org/2000/svg' height='24' viewBox='0 0 24 24' width='24'><path d='M0 0h24v24H0z' fill='none'/><path d='M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z'/></svg>\n)\n\nconst CODE = '011000110110100001101111011100100111010101110011'\n\nfunction PasswordOverlay (props) {\n  const [submitCode, setSubmitCode] = useState('')\n\n  const toAscii = (input) => {\n    let result = ''\n    let arr = input.match(/.{1,8}/g)\n    for (var i = 0; i < arr.length; i++) {\n      result += String.fromCharCode(parseInt(arr[i], 2).toString(10))\n    }\n    return result\n  }\n  const validateCode = () => {\n    console.log(submitCode, toAscii(CODE))\n    if (submitCode.toLowerCase() === toAscii(CODE)) {\n      props.parentUpdate()\n    }\n  }\n\n  return (\n    <div className={cx('password-overlay')}>\n      <div className={cx('password-overlay__content')}>\n        <label className={cx('content__label')}>ENTER THE CODE</label>\n        <div className={cx('content__pwdwrap')}>\n          <input className={cx('content__input')} onChange={event => setSubmitCode(event.target.value)} type='password' />\n          <div className={cx('content__eyewrap')} onClick={() => validateCode()}><Eye /></div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default PasswordOverlay\n","import React, { useState, useEffect } from 'react'\n\nimport style from './style.module.scss'\nimport classNames from 'classnames/bind'\n\nconst cx = classNames.bind(style)\n\nfunction LandingPage (props) {\n  const [counter, setCounter] = useState(10)\n  const [timerString, setTimerString] = useState('')\n\n  useEffect(() => {\n    counter > 0 && setTimeout(() => setCounter(counter - 1), 1000)\n    setTimerString(new Date(counter * 1000).toISOString().substr(11, 8))\n  }, [counter])\n\n  const getFullCountdown = () => {\n    return new Date(counter * 1000).toISOString().substr(11, 8)\n  }\n\n  const videoEnded = () => {\n    console.log('video has ended')\n    props.parentUpdate()\n  }\n  return (\n    <div className={cx('landing-page')}>\n      <div className={cx('landing-page__content')}>\n        {(counter > 0) ? <div className={cx('content__timer', 'blink')}>{timerString}</div> : <div className={cx('content__timer')}>BEGIN</div>}\n        {(counter === 0) && (\n          <video onEnded={() => videoEnded()} className={cx('content__introvid')} controls>\n            <source src='./intro.mp4' />\n          </video>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default LandingPage\n","import React, { useState, useEffect } from 'react'\n\nimport style from './style.module.scss'\nimport classNames from 'classnames/bind'\n\nconst cx = classNames.bind(style)\n\nfunction EndingPage (props) {\n  const [showVideo, setShowVideo] = useState(true)\n  const [showCredits, setShowCredits] = useState(false)\n\n  const videoEnded = () => {\n    setShowVideo(false)\n    setShowCredits(true)\n  }\n\n  return (\n    <div className={cx('ending-page')}>\n      <div className={cx('ending-page__content')}>\n        {showVideo && <video onEnded={() => videoEnded()} className={cx('content__outrovid')} autoPlay controls>\n          <source src='./outro.mp4' />\n        </video>}\n        {showCredits && <div className={cx('content__credits')}>\n          <strong>We hope you enjoyed… ESCHATON - A VIRTUAL WORKSHOP</strong><br /><br />\n          A Chorus Experience<br />\n          In Association with Cristu Banana Suit Dealer<br />\n          And Produced by Our Childhood Traumas<br />\n          Produced by Brittany Blum<br />\n          Directed by Taylor Myers<br />\n          Written and Produced by Tessa Shea Whitehead<br />\n          Stage Manager Kristina Vnook<br />\n          Scenic Design/Lighting Design/Costume Design/Sound Design by the performers<br />\n          Poster Art by A.E. Kieren<br /><br />\n          <strong>Featuring Artists in Alphabetical Order: </strong><br /><br />\n          Tobi Aremu<br />\n          Alethea Austin<br />\n          Joey Dougherty<br />\n          Greg Dubin<br />\n          Brendan Duggan<br />\n          Jourdan Epstein<br />\n          Mallory Gracenin<br />\n          Tony Grayson<br />\n          Isabel Hagen<br />\n          Amanda Hameline<br />\n          Tommy Hayes<br />\n          Anna Hull<br />\n          Amy Jo Jackson<br />\n          A.E. Kieren<br />\n          Tahl Klainman<br />\n          Lilin Lace<br />\n          Devante Lawrence<br />\n          Troy Lingelbach<br />\n          Jonothon Lyons<br />\n          Zach McNally<br />\n          Michael Parmelee<br />\n          Lucie Pohl<br />\n          William Popp<br />\n          Abby Price<br />\n          Sebastiani Romagnolo<br />\n          Michelle Schechter<br />\n          Sam Urdang<br />\n          Dusan Vuksanovic<br />\n          Special thanks to Joyce - the Zoom Salesperson\n        </div>}\n      </div>\n    </div>\n  )\n}\n\nexport default EndingPage\n","import React, { useState, useRef } from 'react'\nimport Scene from './components/Scene'\nimport PasswordOverlay from './components/PasswordOverlay'\nimport LandingPage from './components/LandingPage'\nimport EndingPage from './components/EndingPage'\n\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\"\n\nimport './App.css'\n\nimport { Canvas } from 'react-three-fiber'\n\nfunction App () {\n  const [showPasswordOverlay, setShowPasswordOverlay] = useState(true)\n  const [showLandingPage, setShowLandingPage] = useState(false)\n  const hidePasswordOverlay = () => {\n    setShowPasswordOverlay(false)\n    setShowLandingPage(true)\n  }\n\n  const hideLandingPage = () => {\n    setShowLandingPage(false)\n  }\n  return (\n    <div className='App'>\n      <Router>\n        <Switch>\n          <Route path='/end'>\n            <EndingPage />\n          </Route>\n          <Route path='/'>\n            {showPasswordOverlay && <PasswordOverlay parentUpdate={() => hidePasswordOverlay()} /> }\n            {showLandingPage && <LandingPage parentUpdate={() => hideLandingPage()} /> }\n            <Canvas>\n              <Scene />\n            </Canvas>\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}